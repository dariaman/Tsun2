//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TIB.DL.FA.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSAging")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSAging : global::System.Data.DataSet {
        
        private CUSTOMERDataTable tableCUSTOMER;
        
        private INSURANCEDataTable tableINSURANCE;
        
        private CUSTOMER_UNDUEDataTable tableCUSTOMER_UNDUE;
        
        private CUSTOMERSUMDataTable tableCUSTOMERSUM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public DSAging() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected DSAging(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CUSTOMER"] != null)) {
                    base.Tables.Add(new CUSTOMERDataTable(ds.Tables["CUSTOMER"]));
                }
                if ((ds.Tables["INSURANCE"] != null)) {
                    base.Tables.Add(new INSURANCEDataTable(ds.Tables["INSURANCE"]));
                }
                if ((ds.Tables["CUSTOMER_UNDUE"] != null)) {
                    base.Tables.Add(new CUSTOMER_UNDUEDataTable(ds.Tables["CUSTOMER_UNDUE"]));
                }
                if ((ds.Tables["CUSTOMERSUM"] != null)) {
                    base.Tables.Add(new CUSTOMERSUMDataTable(ds.Tables["CUSTOMERSUM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMERDataTable CUSTOMER {
            get {
                return this.tableCUSTOMER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSURANCEDataTable INSURANCE {
            get {
                return this.tableINSURANCE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMER_UNDUEDataTable CUSTOMER_UNDUE {
            get {
                return this.tableCUSTOMER_UNDUE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CUSTOMERSUMDataTable CUSTOMERSUM {
            get {
                return this.tableCUSTOMERSUM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DSAging cln = ((DSAging)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CUSTOMER"] != null)) {
                    base.Tables.Add(new CUSTOMERDataTable(ds.Tables["CUSTOMER"]));
                }
                if ((ds.Tables["INSURANCE"] != null)) {
                    base.Tables.Add(new INSURANCEDataTable(ds.Tables["INSURANCE"]));
                }
                if ((ds.Tables["CUSTOMER_UNDUE"] != null)) {
                    base.Tables.Add(new CUSTOMER_UNDUEDataTable(ds.Tables["CUSTOMER_UNDUE"]));
                }
                if ((ds.Tables["CUSTOMERSUM"] != null)) {
                    base.Tables.Add(new CUSTOMERSUMDataTable(ds.Tables["CUSTOMERSUM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCUSTOMER = ((CUSTOMERDataTable)(base.Tables["CUSTOMER"]));
            if ((initTable == true)) {
                if ((this.tableCUSTOMER != null)) {
                    this.tableCUSTOMER.InitVars();
                }
            }
            this.tableINSURANCE = ((INSURANCEDataTable)(base.Tables["INSURANCE"]));
            if ((initTable == true)) {
                if ((this.tableINSURANCE != null)) {
                    this.tableINSURANCE.InitVars();
                }
            }
            this.tableCUSTOMER_UNDUE = ((CUSTOMER_UNDUEDataTable)(base.Tables["CUSTOMER_UNDUE"]));
            if ((initTable == true)) {
                if ((this.tableCUSTOMER_UNDUE != null)) {
                    this.tableCUSTOMER_UNDUE.InitVars();
                }
            }
            this.tableCUSTOMERSUM = ((CUSTOMERSUMDataTable)(base.Tables["CUSTOMERSUM"]));
            if ((initTable == true)) {
                if ((this.tableCUSTOMERSUM != null)) {
                    this.tableCUSTOMERSUM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DSAging";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSAging.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCUSTOMER = new CUSTOMERDataTable();
            base.Tables.Add(this.tableCUSTOMER);
            this.tableINSURANCE = new INSURANCEDataTable();
            base.Tables.Add(this.tableINSURANCE);
            this.tableCUSTOMER_UNDUE = new CUSTOMER_UNDUEDataTable();
            base.Tables.Add(this.tableCUSTOMER_UNDUE);
            this.tableCUSTOMERSUM = new CUSTOMERSUMDataTable();
            base.Tables.Add(this.tableCUSTOMERSUM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeCUSTOMER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeINSURANCE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeCUSTOMER_UNDUE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeCUSTOMERSUM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSAging ds = new DSAging();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void CUSTOMERRowChangeEventHandler(object sender, CUSTOMERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void INSURANCERowChangeEventHandler(object sender, INSURANCERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void CUSTOMER_UNDUERowChangeEventHandler(object sender, CUSTOMER_UNDUERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void CUSTOMERSUMRowChangeEventHandler(object sender, CUSTOMERSUMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMERDataTable : global::System.Data.TypedTableBase<CUSTOMERRow> {
            
            private global::System.Data.DataColumn columnVOUCHER;
            
            private global::System.Data.DataColumn columnDUEDATE;
            
            private global::System.Data.DataColumn columnPROFILEID;
            
            private global::System.Data.DataColumn columnNAMA;
            
            private global::System.Data.DataColumn columnLEADER;
            
            private global::System.Data.DataColumn columnPOLICYNO;
            
            private global::System.Data.DataColumn columnDUEAMOUNT;
            
            private global::System.Data.DataColumn columnDAYS;
            
            private global::System.Data.DataColumn columnDAYS30;
            
            private global::System.Data.DataColumn columnDAYS60;
            
            private global::System.Data.DataColumn columnDAYS90;
            
            private global::System.Data.DataColumn columnDAYS91;
            
            private global::System.Data.DataColumn columnMTU;
            
            private global::System.Data.DataColumn columnPICMKT;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnPLCID;
            
            private global::System.Data.DataColumn columnTTG;
            
            private global::System.Data.DataColumn columnKODECO;
            
            private global::System.Data.DataColumn columnISPAID;
            
            private global::System.Data.DataColumn columnPAYMENT_OC;
            
            private global::System.Data.DataColumn columnNOTDUE;
            
            private global::System.Data.DataColumn columnKODETOC;
            
            private global::System.Data.DataColumn columnDN_PLCSYS1;
            
            private global::System.Data.DataColumn columnNOTANO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERDataTable() {
                this.TableName = "CUSTOMER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal CUSTOMERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected CUSTOMERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VOUCHERColumn {
                get {
                    return this.columnVOUCHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEDATEColumn {
                get {
                    return this.columnDUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PROFILEIDColumn {
                get {
                    return this.columnPROFILEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NAMAColumn {
                get {
                    return this.columnNAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LEADERColumn {
                get {
                    return this.columnLEADER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POLICYNOColumn {
                get {
                    return this.columnPOLICYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEAMOUNTColumn {
                get {
                    return this.columnDUEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYSColumn {
                get {
                    return this.columnDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS30Column {
                get {
                    return this.columnDAYS30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS60Column {
                get {
                    return this.columnDAYS60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS90Column {
                get {
                    return this.columnDAYS90;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS91Column {
                get {
                    return this.columnDAYS91;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MTUColumn {
                get {
                    return this.columnMTU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PICMKTColumn {
                get {
                    return this.columnPICMKT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PLCIDColumn {
                get {
                    return this.columnPLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TTGColumn {
                get {
                    return this.columnTTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KODECOColumn {
                get {
                    return this.columnKODECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ISPAIDColumn {
                get {
                    return this.columnISPAID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PAYMENT_OCColumn {
                get {
                    return this.columnPAYMENT_OC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NOTDUEColumn {
                get {
                    return this.columnNOTDUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KODETOCColumn {
                get {
                    return this.columnKODETOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DN_PLCSYS1Column {
                get {
                    return this.columnDN_PLCSYS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NOTANOColumn {
                get {
                    return this.columnNOTANO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERRow this[int index] {
                get {
                    return ((CUSTOMERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERRowChangeEventHandler CUSTOMERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddCUSTOMERRow(CUSTOMERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERRow AddCUSTOMERRow(
                        string VOUCHER, 
                        System.DateTime DUEDATE, 
                        string PROFILEID, 
                        string NAMA, 
                        string LEADER, 
                        string POLICYNO, 
                        decimal DUEAMOUNT, 
                        int DAYS, 
                        decimal DAYS30, 
                        decimal DAYS60, 
                        decimal DAYS90, 
                        decimal DAYS91, 
                        string MTU, 
                        string PICMKT, 
                        System.DateTime ADATE, 
                        string PLCID, 
                        string TTG, 
                        string KODECO, 
                        bool ISPAID, 
                        decimal PAYMENT_OC, 
                        decimal NOTDUE, 
                        string KODETOC, 
                        string DN_PLCSYS1, 
                        string NOTANO) {
                CUSTOMERRow rowCUSTOMERRow = ((CUSTOMERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VOUCHER,
                        DUEDATE,
                        PROFILEID,
                        NAMA,
                        LEADER,
                        POLICYNO,
                        DUEAMOUNT,
                        DAYS,
                        DAYS30,
                        DAYS60,
                        DAYS90,
                        DAYS91,
                        MTU,
                        PICMKT,
                        ADATE,
                        PLCID,
                        TTG,
                        KODECO,
                        ISPAID,
                        PAYMENT_OC,
                        NOTDUE,
                        KODETOC,
                        DN_PLCSYS1,
                        NOTANO};
                rowCUSTOMERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMERRow);
                return rowCUSTOMERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CUSTOMERDataTable cln = ((CUSTOMERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CUSTOMERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnVOUCHER = base.Columns["VOUCHER"];
                this.columnDUEDATE = base.Columns["DUEDATE"];
                this.columnPROFILEID = base.Columns["PROFILEID"];
                this.columnNAMA = base.Columns["NAMA"];
                this.columnLEADER = base.Columns["LEADER"];
                this.columnPOLICYNO = base.Columns["POLICYNO"];
                this.columnDUEAMOUNT = base.Columns["DUEAMOUNT"];
                this.columnDAYS = base.Columns["DAYS"];
                this.columnDAYS30 = base.Columns["DAYS30"];
                this.columnDAYS60 = base.Columns["DAYS60"];
                this.columnDAYS90 = base.Columns["DAYS90"];
                this.columnDAYS91 = base.Columns["DAYS91"];
                this.columnMTU = base.Columns["MTU"];
                this.columnPICMKT = base.Columns["PICMKT"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnPLCID = base.Columns["PLCID"];
                this.columnTTG = base.Columns["TTG"];
                this.columnKODECO = base.Columns["KODECO"];
                this.columnISPAID = base.Columns["ISPAID"];
                this.columnPAYMENT_OC = base.Columns["PAYMENT_OC"];
                this.columnNOTDUE = base.Columns["NOTDUE"];
                this.columnKODETOC = base.Columns["KODETOC"];
                this.columnDN_PLCSYS1 = base.Columns["DN_PLCSYS1"];
                this.columnNOTANO = base.Columns["NOTANO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnVOUCHER = new global::System.Data.DataColumn("VOUCHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOUCHER);
                this.columnDUEDATE = new global::System.Data.DataColumn("DUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEDATE);
                this.columnPROFILEID = new global::System.Data.DataColumn("PROFILEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFILEID);
                this.columnNAMA = new global::System.Data.DataColumn("NAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA);
                this.columnLEADER = new global::System.Data.DataColumn("LEADER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEADER);
                this.columnPOLICYNO = new global::System.Data.DataColumn("POLICYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOLICYNO);
                this.columnDUEAMOUNT = new global::System.Data.DataColumn("DUEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEAMOUNT);
                this.columnDAYS = new global::System.Data.DataColumn("DAYS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS);
                this.columnDAYS30 = new global::System.Data.DataColumn("DAYS30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS30);
                this.columnDAYS60 = new global::System.Data.DataColumn("DAYS60", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS60);
                this.columnDAYS90 = new global::System.Data.DataColumn("DAYS90", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS90);
                this.columnDAYS91 = new global::System.Data.DataColumn("DAYS91", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS91);
                this.columnMTU = new global::System.Data.DataColumn("MTU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTU);
                this.columnPICMKT = new global::System.Data.DataColumn("PICMKT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICMKT);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnPLCID = new global::System.Data.DataColumn("PLCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCID);
                this.columnTTG = new global::System.Data.DataColumn("TTG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTG);
                this.columnKODECO = new global::System.Data.DataColumn("KODECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODECO);
                this.columnISPAID = new global::System.Data.DataColumn("ISPAID", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISPAID);
                this.columnPAYMENT_OC = new global::System.Data.DataColumn("PAYMENT_OC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYMENT_OC);
                this.columnNOTDUE = new global::System.Data.DataColumn("NOTDUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTDUE);
                this.columnKODETOC = new global::System.Data.DataColumn("KODETOC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODETOC);
                this.columnDN_PLCSYS1 = new global::System.Data.DataColumn("DN_PLCSYS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDN_PLCSYS1);
                this.columnNOTANO = new global::System.Data.DataColumn("NOTANO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTANO);
                this.columnVOUCHER.AllowDBNull = false;
                this.columnVOUCHER.MaxLength = 100;
                this.columnPROFILEID.MaxLength = 20;
                this.columnNAMA.MaxLength = 500;
                this.columnLEADER.MaxLength = 500;
                this.columnPOLICYNO.MaxLength = 5000;
                this.columnDAYS.ReadOnly = true;
                this.columnDAYS30.ReadOnly = true;
                this.columnDAYS60.ReadOnly = true;
                this.columnDAYS90.ReadOnly = true;
                this.columnDAYS91.ReadOnly = true;
                this.columnMTU.MaxLength = 3;
                this.columnPICMKT.MaxLength = 5000;
                this.columnPLCID.AllowDBNull = false;
                this.columnPLCID.MaxLength = 20;
                this.columnTTG.MaxLength = 500;
                this.columnKODECO.MaxLength = 10;
                this.columnNOTDUE.ReadOnly = true;
                this.columnKODETOC.MaxLength = 5;
                this.columnDN_PLCSYS1.MaxLength = 5000;
                this.columnNOTANO.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERRow NewCUSTOMERRow() {
                return ((CUSTOMERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CUSTOMERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CUSTOMERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CUSTOMERRowChanged != null)) {
                    this.CUSTOMERRowChanged(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CUSTOMERRowChanging != null)) {
                    this.CUSTOMERRowChanging(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CUSTOMERRowDeleted != null)) {
                    this.CUSTOMERRowDeleted(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CUSTOMERRowDeleting != null)) {
                    this.CUSTOMERRowDeleting(this, new CUSTOMERRowChangeEvent(((CUSTOMERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveCUSTOMERRow(CUSTOMERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSAging ds = new DSAging();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSURANCEDataTable : global::System.Data.TypedTableBase<INSURANCERow> {
            
            private global::System.Data.DataColumn columnVOUCHER;
            
            private global::System.Data.DataColumn columnDUEDATE;
            
            private global::System.Data.DataColumn columnPROFILEID;
            
            private global::System.Data.DataColumn columnNAMA;
            
            private global::System.Data.DataColumn columnTTG;
            
            private global::System.Data.DataColumn columnPOLICYNO;
            
            private global::System.Data.DataColumn columnDUEAMOUNT;
            
            private global::System.Data.DataColumn columnDAYS;
            
            private global::System.Data.DataColumn columnDAYS30;
            
            private global::System.Data.DataColumn columnDAYS60;
            
            private global::System.Data.DataColumn columnDAYS90;
            
            private global::System.Data.DataColumn columnDAYS91;
            
            private global::System.Data.DataColumn columnMTU;
            
            private global::System.Data.DataColumn columnPICMKT;
            
            private global::System.Data.DataColumn columnPLCID;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnKODECO;
            
            private global::System.Data.DataColumn columnDN_PLCSYS1;
            
            private global::System.Data.DataColumn columnDN_PLCSYS2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public INSURANCEDataTable() {
                this.TableName = "INSURANCE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal INSURANCEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected INSURANCEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VOUCHERColumn {
                get {
                    return this.columnVOUCHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEDATEColumn {
                get {
                    return this.columnDUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PROFILEIDColumn {
                get {
                    return this.columnPROFILEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NAMAColumn {
                get {
                    return this.columnNAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TTGColumn {
                get {
                    return this.columnTTG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POLICYNOColumn {
                get {
                    return this.columnPOLICYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEAMOUNTColumn {
                get {
                    return this.columnDUEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYSColumn {
                get {
                    return this.columnDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS30Column {
                get {
                    return this.columnDAYS30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS60Column {
                get {
                    return this.columnDAYS60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS90Column {
                get {
                    return this.columnDAYS90;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS91Column {
                get {
                    return this.columnDAYS91;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MTUColumn {
                get {
                    return this.columnMTU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PICMKTColumn {
                get {
                    return this.columnPICMKT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PLCIDColumn {
                get {
                    return this.columnPLCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KODECOColumn {
                get {
                    return this.columnKODECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DN_PLCSYS1Column {
                get {
                    return this.columnDN_PLCSYS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DN_PLCSYS2Column {
                get {
                    return this.columnDN_PLCSYS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public INSURANCERow this[int index] {
                get {
                    return ((INSURANCERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event INSURANCERowChangeEventHandler INSURANCERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event INSURANCERowChangeEventHandler INSURANCERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event INSURANCERowChangeEventHandler INSURANCERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event INSURANCERowChangeEventHandler INSURANCERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddINSURANCERow(INSURANCERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public INSURANCERow AddINSURANCERow(
                        string VOUCHER, 
                        System.DateTime DUEDATE, 
                        string PROFILEID, 
                        string NAMA, 
                        string TTG, 
                        string POLICYNO, 
                        decimal DUEAMOUNT, 
                        int DAYS, 
                        decimal DAYS30, 
                        decimal DAYS60, 
                        decimal DAYS90, 
                        decimal DAYS91, 
                        string MTU, 
                        string PICMKT, 
                        string PLCID, 
                        string CUSTOMER, 
                        string KODECO, 
                        string DN_PLCSYS1, 
                        string DN_PLCSYS2) {
                INSURANCERow rowINSURANCERow = ((INSURANCERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VOUCHER,
                        DUEDATE,
                        PROFILEID,
                        NAMA,
                        TTG,
                        POLICYNO,
                        DUEAMOUNT,
                        DAYS,
                        DAYS30,
                        DAYS60,
                        DAYS90,
                        DAYS91,
                        MTU,
                        PICMKT,
                        PLCID,
                        CUSTOMER,
                        KODECO,
                        DN_PLCSYS1,
                        DN_PLCSYS2};
                rowINSURANCERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSURANCERow);
                return rowINSURANCERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSURANCEDataTable cln = ((INSURANCEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSURANCEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnVOUCHER = base.Columns["VOUCHER"];
                this.columnDUEDATE = base.Columns["DUEDATE"];
                this.columnPROFILEID = base.Columns["PROFILEID"];
                this.columnNAMA = base.Columns["NAMA"];
                this.columnTTG = base.Columns["TTG"];
                this.columnPOLICYNO = base.Columns["POLICYNO"];
                this.columnDUEAMOUNT = base.Columns["DUEAMOUNT"];
                this.columnDAYS = base.Columns["DAYS"];
                this.columnDAYS30 = base.Columns["DAYS30"];
                this.columnDAYS60 = base.Columns["DAYS60"];
                this.columnDAYS90 = base.Columns["DAYS90"];
                this.columnDAYS91 = base.Columns["DAYS91"];
                this.columnMTU = base.Columns["MTU"];
                this.columnPICMKT = base.Columns["PICMKT"];
                this.columnPLCID = base.Columns["PLCID"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnKODECO = base.Columns["KODECO"];
                this.columnDN_PLCSYS1 = base.Columns["DN_PLCSYS1"];
                this.columnDN_PLCSYS2 = base.Columns["DN_PLCSYS2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnVOUCHER = new global::System.Data.DataColumn("VOUCHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOUCHER);
                this.columnDUEDATE = new global::System.Data.DataColumn("DUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEDATE);
                this.columnPROFILEID = new global::System.Data.DataColumn("PROFILEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFILEID);
                this.columnNAMA = new global::System.Data.DataColumn("NAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA);
                this.columnTTG = new global::System.Data.DataColumn("TTG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTG);
                this.columnPOLICYNO = new global::System.Data.DataColumn("POLICYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOLICYNO);
                this.columnDUEAMOUNT = new global::System.Data.DataColumn("DUEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEAMOUNT);
                this.columnDAYS = new global::System.Data.DataColumn("DAYS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS);
                this.columnDAYS30 = new global::System.Data.DataColumn("DAYS30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS30);
                this.columnDAYS60 = new global::System.Data.DataColumn("DAYS60", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS60);
                this.columnDAYS90 = new global::System.Data.DataColumn("DAYS90", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS90);
                this.columnDAYS91 = new global::System.Data.DataColumn("DAYS91", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS91);
                this.columnMTU = new global::System.Data.DataColumn("MTU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTU);
                this.columnPICMKT = new global::System.Data.DataColumn("PICMKT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICMKT);
                this.columnPLCID = new global::System.Data.DataColumn("PLCID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLCID);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnKODECO = new global::System.Data.DataColumn("KODECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODECO);
                this.columnDN_PLCSYS1 = new global::System.Data.DataColumn("DN_PLCSYS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDN_PLCSYS1);
                this.columnDN_PLCSYS2 = new global::System.Data.DataColumn("DN_PLCSYS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDN_PLCSYS2);
                this.columnVOUCHER.AllowDBNull = false;
                this.columnVOUCHER.MaxLength = 100;
                this.columnPROFILEID.MaxLength = 20;
                this.columnNAMA.MaxLength = 500;
                this.columnTTG.ReadOnly = true;
                this.columnTTG.MaxLength = 1000;
                this.columnPOLICYNO.MaxLength = 5000;
                this.columnDAYS.ReadOnly = true;
                this.columnDAYS30.ReadOnly = true;
                this.columnDAYS60.ReadOnly = true;
                this.columnDAYS90.ReadOnly = true;
                this.columnDAYS91.ReadOnly = true;
                this.columnMTU.MaxLength = 3;
                this.columnPICMKT.MaxLength = 5000;
                this.columnPLCID.AllowDBNull = false;
                this.columnPLCID.MaxLength = 20;
                this.columnCUSTOMER.MaxLength = 1000;
                this.columnKODECO.MaxLength = 10;
                this.columnDN_PLCSYS1.MaxLength = 5000;
                this.columnDN_PLCSYS2.MaxLength = 5000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public INSURANCERow NewINSURANCERow() {
                return ((INSURANCERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSURANCERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSURANCERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSURANCERowChanged != null)) {
                    this.INSURANCERowChanged(this, new INSURANCERowChangeEvent(((INSURANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSURANCERowChanging != null)) {
                    this.INSURANCERowChanging(this, new INSURANCERowChangeEvent(((INSURANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSURANCERowDeleted != null)) {
                    this.INSURANCERowDeleted(this, new INSURANCERowChangeEvent(((INSURANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSURANCERowDeleting != null)) {
                    this.INSURANCERowDeleting(this, new INSURANCERowChangeEvent(((INSURANCERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveINSURANCERow(INSURANCERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSAging ds = new DSAging();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSURANCEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMER_UNDUEDataTable : global::System.Data.TypedTableBase<CUSTOMER_UNDUERow> {
            
            private global::System.Data.DataColumn columnVOUCHER;
            
            private global::System.Data.DataColumn columnDUEDATE;
            
            private global::System.Data.DataColumn columnSDATE;
            
            private global::System.Data.DataColumn columnPROFILEID;
            
            private global::System.Data.DataColumn columnNAMA;
            
            private global::System.Data.DataColumn columnLEADER;
            
            private global::System.Data.DataColumn columnPOLICYNO;
            
            private global::System.Data.DataColumn columnMTU;
            
            private global::System.Data.DataColumn columnDUEAMOUNT;
            
            private global::System.Data.DataColumn columnPICMKT;
            
            private global::System.Data.DataColumn columnDAYS30;
            
            private global::System.Data.DataColumn columnDAYS60;
            
            private global::System.Data.DataColumn columnDAYS90;
            
            private global::System.Data.DataColumn columnDAYS91;
            
            private global::System.Data.DataColumn columnKODECO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMER_UNDUEDataTable() {
                this.TableName = "CUSTOMER_UNDUE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal CUSTOMER_UNDUEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected CUSTOMER_UNDUEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VOUCHERColumn {
                get {
                    return this.columnVOUCHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEDATEColumn {
                get {
                    return this.columnDUEDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SDATEColumn {
                get {
                    return this.columnSDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PROFILEIDColumn {
                get {
                    return this.columnPROFILEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NAMAColumn {
                get {
                    return this.columnNAMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LEADERColumn {
                get {
                    return this.columnLEADER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn POLICYNOColumn {
                get {
                    return this.columnPOLICYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MTUColumn {
                get {
                    return this.columnMTU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEAMOUNTColumn {
                get {
                    return this.columnDUEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PICMKTColumn {
                get {
                    return this.columnPICMKT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS30Column {
                get {
                    return this.columnDAYS30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS60Column {
                get {
                    return this.columnDAYS60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS90Column {
                get {
                    return this.columnDAYS90;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS91Column {
                get {
                    return this.columnDAYS91;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KODECOColumn {
                get {
                    return this.columnKODECO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMER_UNDUERow this[int index] {
                get {
                    return ((CUSTOMER_UNDUERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMER_UNDUERowChangeEventHandler CUSTOMER_UNDUERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMER_UNDUERowChangeEventHandler CUSTOMER_UNDUERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMER_UNDUERowChangeEventHandler CUSTOMER_UNDUERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMER_UNDUERowChangeEventHandler CUSTOMER_UNDUERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddCUSTOMER_UNDUERow(CUSTOMER_UNDUERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMER_UNDUERow AddCUSTOMER_UNDUERow(string VOUCHER, System.DateTime DUEDATE, System.DateTime SDATE, string PROFILEID, string NAMA, string LEADER, string POLICYNO, string MTU, decimal DUEAMOUNT, string PICMKT, decimal DAYS30, decimal DAYS60, decimal DAYS90, decimal DAYS91, string KODECO) {
                CUSTOMER_UNDUERow rowCUSTOMER_UNDUERow = ((CUSTOMER_UNDUERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VOUCHER,
                        DUEDATE,
                        SDATE,
                        PROFILEID,
                        NAMA,
                        LEADER,
                        POLICYNO,
                        MTU,
                        DUEAMOUNT,
                        PICMKT,
                        DAYS30,
                        DAYS60,
                        DAYS90,
                        DAYS91,
                        KODECO};
                rowCUSTOMER_UNDUERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMER_UNDUERow);
                return rowCUSTOMER_UNDUERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CUSTOMER_UNDUEDataTable cln = ((CUSTOMER_UNDUEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CUSTOMER_UNDUEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnVOUCHER = base.Columns["VOUCHER"];
                this.columnDUEDATE = base.Columns["DUEDATE"];
                this.columnSDATE = base.Columns["SDATE"];
                this.columnPROFILEID = base.Columns["PROFILEID"];
                this.columnNAMA = base.Columns["NAMA"];
                this.columnLEADER = base.Columns["LEADER"];
                this.columnPOLICYNO = base.Columns["POLICYNO"];
                this.columnMTU = base.Columns["MTU"];
                this.columnDUEAMOUNT = base.Columns["DUEAMOUNT"];
                this.columnPICMKT = base.Columns["PICMKT"];
                this.columnDAYS30 = base.Columns["DAYS30"];
                this.columnDAYS60 = base.Columns["DAYS60"];
                this.columnDAYS90 = base.Columns["DAYS90"];
                this.columnDAYS91 = base.Columns["DAYS91"];
                this.columnKODECO = base.Columns["KODECO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnVOUCHER = new global::System.Data.DataColumn("VOUCHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOUCHER);
                this.columnDUEDATE = new global::System.Data.DataColumn("DUEDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEDATE);
                this.columnSDATE = new global::System.Data.DataColumn("SDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSDATE);
                this.columnPROFILEID = new global::System.Data.DataColumn("PROFILEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROFILEID);
                this.columnNAMA = new global::System.Data.DataColumn("NAMA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAMA);
                this.columnLEADER = new global::System.Data.DataColumn("LEADER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEADER);
                this.columnPOLICYNO = new global::System.Data.DataColumn("POLICYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOLICYNO);
                this.columnMTU = new global::System.Data.DataColumn("MTU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTU);
                this.columnDUEAMOUNT = new global::System.Data.DataColumn("DUEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEAMOUNT);
                this.columnPICMKT = new global::System.Data.DataColumn("PICMKT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICMKT);
                this.columnDAYS30 = new global::System.Data.DataColumn("DAYS30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS30);
                this.columnDAYS60 = new global::System.Data.DataColumn("DAYS60", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS60);
                this.columnDAYS90 = new global::System.Data.DataColumn("DAYS90", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS90);
                this.columnDAYS91 = new global::System.Data.DataColumn("DAYS91", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS91);
                this.columnKODECO = new global::System.Data.DataColumn("KODECO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKODECO);
                this.columnVOUCHER.AllowDBNull = false;
                this.columnVOUCHER.MaxLength = 100;
                this.columnPROFILEID.MaxLength = 20;
                this.columnNAMA.MaxLength = 500;
                this.columnLEADER.MaxLength = 500;
                this.columnPOLICYNO.MaxLength = 5000;
                this.columnMTU.MaxLength = 3;
                this.columnPICMKT.MaxLength = 5000;
                this.columnDAYS30.ReadOnly = true;
                this.columnDAYS60.ReadOnly = true;
                this.columnDAYS90.ReadOnly = true;
                this.columnDAYS91.ReadOnly = true;
                this.columnKODECO.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMER_UNDUERow NewCUSTOMER_UNDUERow() {
                return ((CUSTOMER_UNDUERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CUSTOMER_UNDUERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CUSTOMER_UNDUERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CUSTOMER_UNDUERowChanged != null)) {
                    this.CUSTOMER_UNDUERowChanged(this, new CUSTOMER_UNDUERowChangeEvent(((CUSTOMER_UNDUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CUSTOMER_UNDUERowChanging != null)) {
                    this.CUSTOMER_UNDUERowChanging(this, new CUSTOMER_UNDUERowChangeEvent(((CUSTOMER_UNDUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CUSTOMER_UNDUERowDeleted != null)) {
                    this.CUSTOMER_UNDUERowDeleted(this, new CUSTOMER_UNDUERowChangeEvent(((CUSTOMER_UNDUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CUSTOMER_UNDUERowDeleting != null)) {
                    this.CUSTOMER_UNDUERowDeleting(this, new CUSTOMER_UNDUERowChangeEvent(((CUSTOMER_UNDUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveCUSTOMER_UNDUERow(CUSTOMER_UNDUERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSAging ds = new DSAging();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMER_UNDUEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CUSTOMERSUMDataTable : global::System.Data.TypedTableBase<CUSTOMERSUMRow> {
            
            private global::System.Data.DataColumn columnMTU;
            
            private global::System.Data.DataColumn columnDUEAMOUNT;
            
            private global::System.Data.DataColumn columnDAYS30;
            
            private global::System.Data.DataColumn columnDAYS60;
            
            private global::System.Data.DataColumn columnDAYS90;
            
            private global::System.Data.DataColumn columnDAYS91;
            
            private global::System.Data.DataColumn columnNOTDUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMDataTable() {
                this.TableName = "CUSTOMERSUM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal CUSTOMERSUMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected CUSTOMERSUMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MTUColumn {
                get {
                    return this.columnMTU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DUEAMOUNTColumn {
                get {
                    return this.columnDUEAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS30Column {
                get {
                    return this.columnDAYS30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS60Column {
                get {
                    return this.columnDAYS60;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS90Column {
                get {
                    return this.columnDAYS90;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DAYS91Column {
                get {
                    return this.columnDAYS91;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NOTDUEColumn {
                get {
                    return this.columnNOTDUE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMRow this[int index] {
                get {
                    return ((CUSTOMERSUMRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERSUMRowChangeEventHandler CUSTOMERSUMRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERSUMRowChangeEventHandler CUSTOMERSUMRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERSUMRowChangeEventHandler CUSTOMERSUMRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event CUSTOMERSUMRowChangeEventHandler CUSTOMERSUMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddCUSTOMERSUMRow(CUSTOMERSUMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMRow AddCUSTOMERSUMRow(string MTU, decimal DUEAMOUNT, decimal DAYS30, decimal DAYS60, decimal DAYS90, decimal DAYS91, decimal NOTDUE) {
                CUSTOMERSUMRow rowCUSTOMERSUMRow = ((CUSTOMERSUMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MTU,
                        DUEAMOUNT,
                        DAYS30,
                        DAYS60,
                        DAYS90,
                        DAYS91,
                        NOTDUE};
                rowCUSTOMERSUMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCUSTOMERSUMRow);
                return rowCUSTOMERSUMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMRow FindByMTU(string MTU) {
                return ((CUSTOMERSUMRow)(this.Rows.Find(new object[] {
                            MTU})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CUSTOMERSUMDataTable cln = ((CUSTOMERSUMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CUSTOMERSUMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnMTU = base.Columns["MTU"];
                this.columnDUEAMOUNT = base.Columns["DUEAMOUNT"];
                this.columnDAYS30 = base.Columns["DAYS30"];
                this.columnDAYS60 = base.Columns["DAYS60"];
                this.columnDAYS90 = base.Columns["DAYS90"];
                this.columnDAYS91 = base.Columns["DAYS91"];
                this.columnNOTDUE = base.Columns["NOTDUE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnMTU = new global::System.Data.DataColumn("MTU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTU);
                this.columnDUEAMOUNT = new global::System.Data.DataColumn("DUEAMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEAMOUNT);
                this.columnDAYS30 = new global::System.Data.DataColumn("DAYS30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS30);
                this.columnDAYS60 = new global::System.Data.DataColumn("DAYS60", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS60);
                this.columnDAYS90 = new global::System.Data.DataColumn("DAYS90", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS90);
                this.columnDAYS91 = new global::System.Data.DataColumn("DAYS91", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS91);
                this.columnNOTDUE = new global::System.Data.DataColumn("NOTDUE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTDUE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMTU}, true));
                this.columnMTU.AllowDBNull = false;
                this.columnMTU.Unique = true;
                this.columnMTU.MaxLength = 3;
                this.columnDAYS30.ReadOnly = true;
                this.columnDAYS60.ReadOnly = true;
                this.columnDAYS90.ReadOnly = true;
                this.columnDAYS91.ReadOnly = true;
                this.columnNOTDUE.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMRow NewCUSTOMERSUMRow() {
                return ((CUSTOMERSUMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CUSTOMERSUMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CUSTOMERSUMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CUSTOMERSUMRowChanged != null)) {
                    this.CUSTOMERSUMRowChanged(this, new CUSTOMERSUMRowChangeEvent(((CUSTOMERSUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CUSTOMERSUMRowChanging != null)) {
                    this.CUSTOMERSUMRowChanging(this, new CUSTOMERSUMRowChangeEvent(((CUSTOMERSUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CUSTOMERSUMRowDeleted != null)) {
                    this.CUSTOMERSUMRowDeleted(this, new CUSTOMERSUMRowChangeEvent(((CUSTOMERSUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CUSTOMERSUMRowDeleting != null)) {
                    this.CUSTOMERSUMRowDeleting(this, new CUSTOMERSUMRowChangeEvent(((CUSTOMERSUMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveCUSTOMERSUMRow(CUSTOMERSUMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSAging ds = new DSAging();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CUSTOMERSUMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CUSTOMERRow : global::System.Data.DataRow {
            
            private CUSTOMERDataTable tableCUSTOMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal CUSTOMERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCUSTOMER = ((CUSTOMERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VOUCHER {
                get {
                    return ((string)(this[this.tableCUSTOMER.VOUCHERColumn]));
                }
                set {
                    this[this.tableCUSTOMER.VOUCHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCUSTOMER.DUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEDATE\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PROFILEID {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.PROFILEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFILEID\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.PROFILEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NAMA {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.NAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMA\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.NAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LEADER {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.LEADERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEADER\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.LEADERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string POLICYNO {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.POLICYNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POLICYNO\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.POLICYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DUEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.DUEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEAMOUNT\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DUEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DAYS {
                get {
                    try {
                        return ((int)(this[this.tableCUSTOMER.DAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS30 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.DAYS30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS30\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DAYS30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS60 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.DAYS60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS60\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DAYS60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS90 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.DAYS90Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS90\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DAYS90Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS91 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.DAYS91Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS91\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DAYS91Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MTU {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.MTUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTU\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.MTUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PICMKT {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.PICMKTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICMKT\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.PICMKTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ADATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCUSTOMER.ADATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADATE\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PLCID {
                get {
                    return ((string)(this[this.tableCUSTOMER.PLCIDColumn]));
                }
                set {
                    this[this.tableCUSTOMER.PLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TTG {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.TTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TTG\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.TTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KODECO {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.KODECOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KODECO\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.KODECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool ISPAID {
                get {
                    try {
                        return ((bool)(this[this.tableCUSTOMER.ISPAIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISPAID\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.ISPAIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PAYMENT_OC {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.PAYMENT_OCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PAYMENT_OC\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.PAYMENT_OCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NOTDUE {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER.NOTDUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTDUE\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.NOTDUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KODETOC {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.KODETOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KODETOC\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.KODETOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DN_PLCSYS1 {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.DN_PLCSYS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DN_PLCSYS1\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.DN_PLCSYS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NOTANO {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER.NOTANOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTANO\' in table \'CUSTOMER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER.NOTANOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEDATENull() {
                return this.IsNull(this.tableCUSTOMER.DUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEDATENull() {
                this[this.tableCUSTOMER.DUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPROFILEIDNull() {
                return this.IsNull(this.tableCUSTOMER.PROFILEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPROFILEIDNull() {
                this[this.tableCUSTOMER.PROFILEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNAMANull() {
                return this.IsNull(this.tableCUSTOMER.NAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNAMANull() {
                this[this.tableCUSTOMER.NAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLEADERNull() {
                return this.IsNull(this.tableCUSTOMER.LEADERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLEADERNull() {
                this[this.tableCUSTOMER.LEADERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPOLICYNONull() {
                return this.IsNull(this.tableCUSTOMER.POLICYNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPOLICYNONull() {
                this[this.tableCUSTOMER.POLICYNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEAMOUNTNull() {
                return this.IsNull(this.tableCUSTOMER.DUEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEAMOUNTNull() {
                this[this.tableCUSTOMER.DUEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYSNull() {
                return this.IsNull(this.tableCUSTOMER.DAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYSNull() {
                this[this.tableCUSTOMER.DAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS30Null() {
                return this.IsNull(this.tableCUSTOMER.DAYS30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS30Null() {
                this[this.tableCUSTOMER.DAYS30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS60Null() {
                return this.IsNull(this.tableCUSTOMER.DAYS60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS60Null() {
                this[this.tableCUSTOMER.DAYS60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS90Null() {
                return this.IsNull(this.tableCUSTOMER.DAYS90Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS90Null() {
                this[this.tableCUSTOMER.DAYS90Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS91Null() {
                return this.IsNull(this.tableCUSTOMER.DAYS91Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS91Null() {
                this[this.tableCUSTOMER.DAYS91Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMTUNull() {
                return this.IsNull(this.tableCUSTOMER.MTUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMTUNull() {
                this[this.tableCUSTOMER.MTUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPICMKTNull() {
                return this.IsNull(this.tableCUSTOMER.PICMKTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPICMKTNull() {
                this[this.tableCUSTOMER.PICMKTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsADATENull() {
                return this.IsNull(this.tableCUSTOMER.ADATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetADATENull() {
                this[this.tableCUSTOMER.ADATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTTGNull() {
                return this.IsNull(this.tableCUSTOMER.TTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTTGNull() {
                this[this.tableCUSTOMER.TTGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKODECONull() {
                return this.IsNull(this.tableCUSTOMER.KODECOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKODECONull() {
                this[this.tableCUSTOMER.KODECOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsISPAIDNull() {
                return this.IsNull(this.tableCUSTOMER.ISPAIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetISPAIDNull() {
                this[this.tableCUSTOMER.ISPAIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPAYMENT_OCNull() {
                return this.IsNull(this.tableCUSTOMER.PAYMENT_OCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPAYMENT_OCNull() {
                this[this.tableCUSTOMER.PAYMENT_OCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNOTDUENull() {
                return this.IsNull(this.tableCUSTOMER.NOTDUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNOTDUENull() {
                this[this.tableCUSTOMER.NOTDUEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKODETOCNull() {
                return this.IsNull(this.tableCUSTOMER.KODETOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKODETOCNull() {
                this[this.tableCUSTOMER.KODETOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDN_PLCSYS1Null() {
                return this.IsNull(this.tableCUSTOMER.DN_PLCSYS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDN_PLCSYS1Null() {
                this[this.tableCUSTOMER.DN_PLCSYS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNOTANONull() {
                return this.IsNull(this.tableCUSTOMER.NOTANOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNOTANONull() {
                this[this.tableCUSTOMER.NOTANOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSURANCERow : global::System.Data.DataRow {
            
            private INSURANCEDataTable tableINSURANCE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal INSURANCERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSURANCE = ((INSURANCEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VOUCHER {
                get {
                    return ((string)(this[this.tableINSURANCE.VOUCHERColumn]));
                }
                set {
                    this[this.tableINSURANCE.VOUCHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableINSURANCE.DUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEDATE\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PROFILEID {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.PROFILEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFILEID\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.PROFILEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NAMA {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.NAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMA\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.NAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TTG {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.TTGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TTG\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.TTGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string POLICYNO {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.POLICYNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POLICYNO\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.POLICYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DUEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableINSURANCE.DUEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEAMOUNT\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DUEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DAYS {
                get {
                    try {
                        return ((int)(this[this.tableINSURANCE.DAYSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS30 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSURANCE.DAYS30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS30\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DAYS30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS60 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSURANCE.DAYS60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS60\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DAYS60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS90 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSURANCE.DAYS90Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS90\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DAYS90Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS91 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSURANCE.DAYS91Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS91\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DAYS91Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MTU {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.MTUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTU\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.MTUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PICMKT {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.PICMKTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICMKT\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.PICMKTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PLCID {
                get {
                    return ((string)(this[this.tableINSURANCE.PLCIDColumn]));
                }
                set {
                    this[this.tableINSURANCE.PLCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KODECO {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.KODECOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KODECO\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.KODECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DN_PLCSYS1 {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.DN_PLCSYS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DN_PLCSYS1\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DN_PLCSYS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DN_PLCSYS2 {
                get {
                    try {
                        return ((string)(this[this.tableINSURANCE.DN_PLCSYS2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DN_PLCSYS2\' in table \'INSURANCE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableINSURANCE.DN_PLCSYS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEDATENull() {
                return this.IsNull(this.tableINSURANCE.DUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEDATENull() {
                this[this.tableINSURANCE.DUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPROFILEIDNull() {
                return this.IsNull(this.tableINSURANCE.PROFILEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPROFILEIDNull() {
                this[this.tableINSURANCE.PROFILEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNAMANull() {
                return this.IsNull(this.tableINSURANCE.NAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNAMANull() {
                this[this.tableINSURANCE.NAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTTGNull() {
                return this.IsNull(this.tableINSURANCE.TTGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTTGNull() {
                this[this.tableINSURANCE.TTGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPOLICYNONull() {
                return this.IsNull(this.tableINSURANCE.POLICYNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPOLICYNONull() {
                this[this.tableINSURANCE.POLICYNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEAMOUNTNull() {
                return this.IsNull(this.tableINSURANCE.DUEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEAMOUNTNull() {
                this[this.tableINSURANCE.DUEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYSNull() {
                return this.IsNull(this.tableINSURANCE.DAYSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYSNull() {
                this[this.tableINSURANCE.DAYSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS30Null() {
                return this.IsNull(this.tableINSURANCE.DAYS30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS30Null() {
                this[this.tableINSURANCE.DAYS30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS60Null() {
                return this.IsNull(this.tableINSURANCE.DAYS60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS60Null() {
                this[this.tableINSURANCE.DAYS60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS90Null() {
                return this.IsNull(this.tableINSURANCE.DAYS90Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS90Null() {
                this[this.tableINSURANCE.DAYS90Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS91Null() {
                return this.IsNull(this.tableINSURANCE.DAYS91Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS91Null() {
                this[this.tableINSURANCE.DAYS91Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMTUNull() {
                return this.IsNull(this.tableINSURANCE.MTUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMTUNull() {
                this[this.tableINSURANCE.MTUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPICMKTNull() {
                return this.IsNull(this.tableINSURANCE.PICMKTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPICMKTNull() {
                this[this.tableINSURANCE.PICMKTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableINSURANCE.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCUSTOMERNull() {
                this[this.tableINSURANCE.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKODECONull() {
                return this.IsNull(this.tableINSURANCE.KODECOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKODECONull() {
                this[this.tableINSURANCE.KODECOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDN_PLCSYS1Null() {
                return this.IsNull(this.tableINSURANCE.DN_PLCSYS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDN_PLCSYS1Null() {
                this[this.tableINSURANCE.DN_PLCSYS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDN_PLCSYS2Null() {
                return this.IsNull(this.tableINSURANCE.DN_PLCSYS2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDN_PLCSYS2Null() {
                this[this.tableINSURANCE.DN_PLCSYS2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CUSTOMER_UNDUERow : global::System.Data.DataRow {
            
            private CUSTOMER_UNDUEDataTable tableCUSTOMER_UNDUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal CUSTOMER_UNDUERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCUSTOMER_UNDUE = ((CUSTOMER_UNDUEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VOUCHER {
                get {
                    return ((string)(this[this.tableCUSTOMER_UNDUE.VOUCHERColumn]));
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.VOUCHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DUEDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCUSTOMER_UNDUE.DUEDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEDATE\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.DUEDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime SDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCUSTOMER_UNDUE.SDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SDATE\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.SDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PROFILEID {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.PROFILEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROFILEID\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.PROFILEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NAMA {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.NAMAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAMA\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.NAMAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LEADER {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.LEADERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LEADER\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.LEADERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string POLICYNO {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.POLICYNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POLICYNO\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.POLICYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MTU {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.MTUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTU\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.MTUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DUEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER_UNDUE.DUEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEAMOUNT\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.DUEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PICMKT {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.PICMKTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PICMKT\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.PICMKTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS30 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER_UNDUE.DAYS30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS30\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.DAYS30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS60 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER_UNDUE.DAYS60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS60\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.DAYS60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS90 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER_UNDUE.DAYS90Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS90\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.DAYS90Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS91 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMER_UNDUE.DAYS91Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS91\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.DAYS91Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string KODECO {
                get {
                    try {
                        return ((string)(this[this.tableCUSTOMER_UNDUE.KODECOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KODECO\' in table \'CUSTOMER_UNDUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMER_UNDUE.KODECOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEDATENull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.DUEDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEDATENull() {
                this[this.tableCUSTOMER_UNDUE.DUEDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSDATENull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.SDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSDATENull() {
                this[this.tableCUSTOMER_UNDUE.SDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPROFILEIDNull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.PROFILEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPROFILEIDNull() {
                this[this.tableCUSTOMER_UNDUE.PROFILEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNAMANull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.NAMAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNAMANull() {
                this[this.tableCUSTOMER_UNDUE.NAMAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLEADERNull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.LEADERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLEADERNull() {
                this[this.tableCUSTOMER_UNDUE.LEADERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPOLICYNONull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.POLICYNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPOLICYNONull() {
                this[this.tableCUSTOMER_UNDUE.POLICYNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMTUNull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.MTUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMTUNull() {
                this[this.tableCUSTOMER_UNDUE.MTUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEAMOUNTNull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.DUEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEAMOUNTNull() {
                this[this.tableCUSTOMER_UNDUE.DUEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPICMKTNull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.PICMKTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPICMKTNull() {
                this[this.tableCUSTOMER_UNDUE.PICMKTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS30Null() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.DAYS30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS30Null() {
                this[this.tableCUSTOMER_UNDUE.DAYS30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS60Null() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.DAYS60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS60Null() {
                this[this.tableCUSTOMER_UNDUE.DAYS60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS90Null() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.DAYS90Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS90Null() {
                this[this.tableCUSTOMER_UNDUE.DAYS90Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS91Null() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.DAYS91Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS91Null() {
                this[this.tableCUSTOMER_UNDUE.DAYS91Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKODECONull() {
                return this.IsNull(this.tableCUSTOMER_UNDUE.KODECOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKODECONull() {
                this[this.tableCUSTOMER_UNDUE.KODECOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CUSTOMERSUMRow : global::System.Data.DataRow {
            
            private CUSTOMERSUMDataTable tableCUSTOMERSUM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal CUSTOMERSUMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCUSTOMERSUM = ((CUSTOMERSUMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MTU {
                get {
                    return ((string)(this[this.tableCUSTOMERSUM.MTUColumn]));
                }
                set {
                    this[this.tableCUSTOMERSUM.MTUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DUEAMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMERSUM.DUEAMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DUEAMOUNT\' in table \'CUSTOMERSUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMERSUM.DUEAMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS30 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMERSUM.DAYS30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS30\' in table \'CUSTOMERSUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMERSUM.DAYS30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS60 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMERSUM.DAYS60Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS60\' in table \'CUSTOMERSUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMERSUM.DAYS60Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS90 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMERSUM.DAYS90Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS90\' in table \'CUSTOMERSUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMERSUM.DAYS90Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DAYS91 {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMERSUM.DAYS91Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DAYS91\' in table \'CUSTOMERSUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMERSUM.DAYS91Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NOTDUE {
                get {
                    try {
                        return ((decimal)(this[this.tableCUSTOMERSUM.NOTDUEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOTDUE\' in table \'CUSTOMERSUM\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCUSTOMERSUM.NOTDUEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDUEAMOUNTNull() {
                return this.IsNull(this.tableCUSTOMERSUM.DUEAMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDUEAMOUNTNull() {
                this[this.tableCUSTOMERSUM.DUEAMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS30Null() {
                return this.IsNull(this.tableCUSTOMERSUM.DAYS30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS30Null() {
                this[this.tableCUSTOMERSUM.DAYS30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS60Null() {
                return this.IsNull(this.tableCUSTOMERSUM.DAYS60Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS60Null() {
                this[this.tableCUSTOMERSUM.DAYS60Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS90Null() {
                return this.IsNull(this.tableCUSTOMERSUM.DAYS90Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS90Null() {
                this[this.tableCUSTOMERSUM.DAYS90Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDAYS91Null() {
                return this.IsNull(this.tableCUSTOMERSUM.DAYS91Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDAYS91Null() {
                this[this.tableCUSTOMERSUM.DAYS91Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNOTDUENull() {
                return this.IsNull(this.tableCUSTOMERSUM.NOTDUEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNOTDUENull() {
                this[this.tableCUSTOMERSUM.NOTDUEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class CUSTOMERRowChangeEvent : global::System.EventArgs {
            
            private CUSTOMERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERRowChangeEvent(CUSTOMERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class INSURANCERowChangeEvent : global::System.EventArgs {
            
            private INSURANCERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public INSURANCERowChangeEvent(INSURANCERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public INSURANCERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class CUSTOMER_UNDUERowChangeEvent : global::System.EventArgs {
            
            private CUSTOMER_UNDUERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMER_UNDUERowChangeEvent(CUSTOMER_UNDUERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMER_UNDUERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class CUSTOMERSUMRowChangeEvent : global::System.EventArgs {
            
            private CUSTOMERSUMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMRowChangeEvent(CUSTOMERSUMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public CUSTOMERSUMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TIB.DL.FA.Report.DSAgingTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CUSTOMERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public CUSTOMERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CUSTOMER";
            tableMapping.ColumnMappings.Add("VOUCHER", "VOUCHER");
            tableMapping.ColumnMappings.Add("DUEDATE", "DUEDATE");
            tableMapping.ColumnMappings.Add("PROFILEID", "PROFILEID");
            tableMapping.ColumnMappings.Add("NAMA", "NAMA");
            tableMapping.ColumnMappings.Add("LEADER", "LEADER");
            tableMapping.ColumnMappings.Add("POLICYNO", "POLICYNO");
            tableMapping.ColumnMappings.Add("DUEAMOUNT", "DUEAMOUNT");
            tableMapping.ColumnMappings.Add("DAYS", "DAYS");
            tableMapping.ColumnMappings.Add("DAYS30", "DAYS30");
            tableMapping.ColumnMappings.Add("DAYS60", "DAYS60");
            tableMapping.ColumnMappings.Add("DAYS90", "DAYS90");
            tableMapping.ColumnMappings.Add("DAYS91", "DAYS91");
            tableMapping.ColumnMappings.Add("MTU", "MTU");
            tableMapping.ColumnMappings.Add("PICMKT", "PICMKT");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("PLCID", "PLCID");
            tableMapping.ColumnMappings.Add("TTG", "TTG");
            tableMapping.ColumnMappings.Add("KODECO", "KODECO");
            tableMapping.ColumnMappings.Add("ISPAID", "ISPAID");
            tableMapping.ColumnMappings.Add("PAYMENT_OC", "PAYMENT_OC");
            tableMapping.ColumnMappings.Add("NOTDUE", "NOTDUE");
            tableMapping.ColumnMappings.Add("KODETOC", "KODETOC");
            tableMapping.ColumnMappings.Add("DN_PLCSYS1", "DN_PLCSYS1");
            tableMapping.ColumnMappings.Add("NOTANO", "NOTANO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIB.DL.FA.Properties.Settings.Default.FAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT P.VOUCHER, P.DUEDATE, NT.ADATE, NT.PROFILEID, NT.NAMA, PLC.PLCTTG AS TTG, " +
                "INS.NAMA AS LEADER, ADD1.VAL AS POLICYNO,\r\n  P.MTU, P.DUEAMOUNT, DATEDIFF(DAY, P" +
                ".DUEDATE, GETDATE()) AS DAYS, DATEDIFF(DAY, NT.ADATE, GETDATE()) AS DAYSNT, ADD2" +
                ".VAL AS PICMKT, CO.KODECO, P.ISPAID, P.PAYMENT_OC, NT.KODETOC,\r\n  CASE WHEN P.DU" +
                "EDATE > GETDATE() THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END AS NOTDUE,\r\n  CASE W" +
                "HEN NT.ADATE > GETDATE() THEN P.DUEAMOUNT - P.PAYMENT_OC ELSE 0 END AS NOTDUE_NT" +
                ",\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAM" +
                "OUNT- P.PAYMENT_OC ELSE 0 END AS DAYS30,\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, G" +
                "ETDATE()) BETWEEN 31 AND 60 THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END AS DAYS60," +
                "\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAM" +
                "OUNT- P.PAYMENT_OC ELSE 0 END AS DAYS90,\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, G" +
                "ETDATE()) > 90 THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END AS DAYS91,\r\n  CASE WHEN" +
                " DATEDIFF(DAY, NT.ADATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT- P.PAYMENT" +
                "_OC ELSE 0 END AS NT_DAYS30,\r\n  CASE WHEN DATEDIFF(DAY, NT.ADATE, GETDATE()) BET" +
                "WEEN 31 AND 60 THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END AS NT_DAYS60,\r\n  CASE W" +
                "HEN DATEDIFF(DAY, NT.ADATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT- P.PAY" +
                "MENT_OC ELSE 0 END AS NT_DAYS90,\r\n  CASE WHEN DATEDIFF(DAY, NT.ADATE, GETDATE())" +
                " > 90 THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END AS NT_DAYS91, ADD1_DNV.VAL AS DN" +
                "_PLCSYS1, ADD2_DNV.VAL AS DN_PLCSYS2, PLC.PLCID, NT.NOTANO\r\nFROM FAPAYMENT P\r\nIN" +
                "NER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER\r\nINNER JOIN PLCNOTA NT ON VO.NOT" +
                "ANO = NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID\r\nLEFT OUTER JOIN" +
                " PLCINSURANCE INS ON NT.PLCID = INS.PLCID AND INS.TYPEF = \'L\'\r\nLEFT OUTER JOIN P" +
                "LCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = \'POLICY_NO\'\r\nLEFT OU" +
                "TER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = \'PS_PIC_MK" +
                "T\'\r\nLEFT OUTER JOIN CO ON CO.USRID = ADD2.VAL\r\nLEFT OUTER JOIN PLCADDINFO ADD1_D" +
                "NV ON NT.PLCID = ADD1_DNV.PLCID AND ADD1_DNV.CONFIGID = \'DN_VISION\'\r\nLEFT OUTER " +
                "JOIN PLCADDINFO ADD2_DNV ON NT.PLCID = ADD2_DNV.PLCID AND ADD2_DNV.CONFIGID = \'D" +
                "N_VISION2\'\r\nWHERE NT.DCTYPE = \'BB\'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT P.VOUCHER, P.DUEDATE, NT.PROFILEID, NT.NAMA, INS.NAMA AS LEADER, ADD1.VAL AS POLICYNO,
  P.MTU, P.DUEAMOUNT-P.PAYMENT_OC AS DUEAMOUNT, DATEDIFF(DAY, P.DUEDATE, @ADATE) AS DAYS,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS30,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS60,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 61 AND 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS90,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS91
FROM FAPAYMENT P
INNER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER
INNER JOIN PLCNOTA NT ON VO.NOTANO = NT.NOTANO
INNER JOIN PLCINSURANCE INS ON NT.PLCID = INS.PLCID AND INS.TYPEF = 'L'
LEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = 'POLICY_NO'
WHERE NT.DCTYPE = 'BB' AND P.DUEDATE BETWEEN @SDATE AND @EDATE";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "\r\nSELECT P.VOUCHER, P.DUEDATE, NT.ADATE, NT.PROFILEID, NT.NAMA, ISNULL(INS.NAMA, " +
                "MINS.NAMA) AS LEADER, ADD1.VAL AS POLICYNO,\r\nCASE WHEN CHARINDEX(\'and/or\', PLC.P" +
                "LCTTG) > 0 THEN SUBSTRING(PLC.PLCTTG, 0, CHARINDEX(\'and/or\', PLC.PLCTTG)) ELSE P" +
                "LC.PLCTTG END AS TTG, \r\n  P.MTU, P.DUEAMOUNT-P.PAYMENT_OC AS DUEAMOUNT, DATEDIFF" +
                "(DAY, NT.ADATE, GETDATE()) AS DAYS, ADD2.VAL AS PICMKT, CO.KODECO, P.ISPAID, P.P" +
                "AYMENT_OC, NT.KODETOC,\r\n  CASE WHEN NT.ADATE > GETDATE() THEN P.DUEAMOUNT - P.PA" +
                "YMENT_OC ELSE 0 END AS NOTDUE,\r\n  CASE WHEN DATEDIFF(DAY, NT.ADATE, GETDATE()) B" +
                "ETWEEN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS30,\r\n  CASE WHEN" +
                " DATEDIFF(DAY, NT.ADATE, GETDATE()) BETWEEN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT" +
                "_OC ELSE 0 END AS DAYS60,\r\n  CASE WHEN DATEDIFF(DAY, NT.ADATE, GETDATE()) BETWEE" +
                "N 61 AND 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS90,\r\n  CASE WHEN DAT" +
                "EDIFF(DAY, NT.ADATE, GETDATE()) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS" +
                " DAYS91,\r\n  ISNULL(ADD1_DNV.VAL, ADD2_DNV.VAL) AS DN_PLCSYS1, PLC.PLCID, NT.NOTA" +
                "NO\r\nFROM FAPAYMENT P\r\nINNER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER\r\nINNER J" +
                "OIN PLCNOTA NT ON VO.NOTANO = NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = N" +
                "T.PLCID\r\nINNER JOIN PLACINGTOC PT ON PT.PLCID = PLC.PLCID AND NT.KODETOC = PT.KO" +
                "DETOC\r\nLEFT OUTER JOIN PLCINSURANCE INS ON NT.PLCID = INS.PLCID AND INS.TYPEF = " +
                "\'L\'\r\nLEFT OUTER JOIN PLCINSURANCE MINS ON PLC.MPLCID = MINS.PLCID AND MINS.TYPEF" +
                " = \'L\'\r\nLEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIG" +
                "ID = \'POLICY_NO\'\r\nLEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND A" +
                "DD2.CONFIGID = \'PS_PIC_MKT\'\r\nLEFT OUTER JOIN CO ON CO.USRID = ADD2.VAL\r\nLEFT OUT" +
                "ER JOIN PLCADDINFO ADD1_DNV ON NT.PLCID = ADD1_DNV.PLCID AND ADD1_DNV.CONFIGID =" +
                " \'DN_VISION\' AND PT.URUT = 1\r\nLEFT OUTER JOIN PLCADDINFO ADD2_DNV ON NT.PLCID = " +
                "ADD2_DNV.PLCID AND ADD2_DNV.CONFIGID = \'DN_VISION2\'  AND PT.URUT = 2\r\nWHERE NT.D" +
                "CTYPE IN (\'BB\', \'BF\')\r\nAND (NT.NAMA LIKE @TTG) AND (NT.ADATE BETWEEN @SDATE AND " +
                "@EDATE)\r\nAND (PLC.KODECAB LIKE @KODECAB) AND (P.ISPAID = 0) \r\nAND (ISNULL(ADD1_D" +
                "NV.VAL, ADD2_DNV.VAL) LIKE @DNVISION1 OR \'1\' = @ISDNVISION1)\r\nAND (NT.NOTANO LIK" +
                "E @NOTANO OR \'1\' = @ISNOTANO)\r\nAND (CO.KODECO LIKE @KODECO)\r\nORDER BY P.VOUCHER";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTG", global::System.Data.SqlDbType.VarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECAB", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KODECAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISDNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTANO", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOTANO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISNOTANO", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECO", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "KODECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT P.VOUCHER, P.DUEDATE, NT.ADATE, NT.PROFILEID, NT.NAMA, ISNULL(INS.NAMA, MI" +
                "NS.NAMA) AS LEADER, ADD1.VAL AS POLICYNO,\r\nCASE WHEN CHARINDEX(\'and/or\', PLC.PLC" +
                "TTG) > 0 THEN SUBSTRING(PLC.PLCTTG, 0, CHARINDEX(\'and/or\', PLC.PLCTTG)) ELSE PLC" +
                ".PLCTTG END AS TTG, \r\n  P.MTU, P.DUEAMOUNT-P.PAYMENT_OC AS DUEAMOUNT, DATEDIFF(D" +
                "AY, P.DUEDATE, GETDATE()) AS DAYS, ADD2.VAL AS PICMKT, CO.KODECO, P.ISPAID, P.PA" +
                "YMENT_OC, NT.KODETOC,\r\n  CASE WHEN P.DUEDATE > GETDATE() THEN P.DUEAMOUNT- P.PAY" +
                "MENT_OC ELSE 0 END AS NOTDUE,\r\n  CASE WHEN NT.ADATE > GETDATE() THEN P.DUEAMOUNT" +
                " - P.PAYMENT_OC ELSE 0 END AS NOTDUE_NT,\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, G" +
                "ETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS30,\r\n" +
                "  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 31 AND 60 THEN P.DUEAMOU" +
                "NT-P.PAYMENT_OC ELSE 0 END AS DAYS60,\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETD" +
                "ATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS90,\r\n  " +
                "CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC" +
                "  ELSE 0 END AS DAYS91,\r\n  ISNULL(ADD1_DNV.VAL, ADD2_DNV.VAL) AS DN_PLCSYS1, PLC" +
                ".PLCID, NT.NOTANO,\r\nPLC.POLICYTYPE AS JENIS_ASURANSI\r\nFROM FAPAYMENT P\r\nINNER JO" +
                "IN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER\r\nINNER JOIN PLCNOTA NT ON VO.NOTANO = " +
                "NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID\r\nINNER JOIN PLACINGTOC" +
                " PT ON PT.PLCID = PLC.PLCID AND NT.KODETOC = PT.KODETOC\r\nLEFT OUTER JOIN PLCINSU" +
                "RANCE INS ON NT.PLCID = INS.PLCID AND INS.TYPEF = \'L\'\r\nLEFT OUTER JOIN PLCINSURA" +
                "NCE MINS ON PLC.MPLCID = MINS.PLCID AND MINS.TYPEF = \'L\'\r\nLEFT OUTER JOIN PLCADD" +
                "INFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = \'POLICY_NO\'\r\nLEFT OUTER J" +
                "OIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = \'PS_PIC_MKT\'\r\nL" +
                "EFT OUTER JOIN CO ON CO.USRID = ADD2.VAL\r\nLEFT OUTER JOIN PLCADDINFO ADD1_DNV ON" +
                " NT.PLCID = ADD1_DNV.PLCID AND ADD1_DNV.CONFIGID = \'DN_VISION\' AND PT.URUT = 1\r\n" +
                "LEFT OUTER JOIN PLCADDINFO ADD2_DNV ON NT.PLCID = ADD2_DNV.PLCID AND ADD2_DNV.CO" +
                "NFIGID = \'DN_VISION2\'  AND PT.URUT = 2\r\nWHERE NT.DCTYPE IN (\'BB\', \'BF\')\r\nAND (NT" +
                ".NAMA LIKE @TTG) AND (P.DUEDATE BETWEEN @SDATE AND @EDATE) AND (PLC.KODECAB LIKE" +
                " @KODECAB) AND (P.ISPAID = 0) \r\nAND (ISNULL(ADD1_DNV.VAL, ADD2_DNV.VAL) LIKE @DN" +
                "VISION1 OR \'1\' = @ISDNVISION1)\r\nAND (NT.NOTANO LIKE @NOTANO OR \'1\' = @ISNOTANO)\r" +
                "\nAND (CO.KODECO LIKE @KODECO)\r\nORDER BY P.VOUCHER";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTG", global::System.Data.SqlDbType.VarChar, 600, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECAB", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KODECAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISDNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTANO", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOTANO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISNOTANO", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECO", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "KODECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSAging.CUSTOMERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSAging.CUSTOMERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSAging.CUSTOMERDataTable dataTable = new DSAging.CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.CUSTOMERDataTable GetDataByDate(System.DateTime ADATE, global::System.Nullable<global::System.DateTime> SDATE, global::System.Nullable<global::System.DateTime> EDATE) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(ADATE));
            if ((SDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DSAging.CUSTOMERDataTable dataTable = new DSAging.CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.CUSTOMERDataTable GetDataByFilterAgingNote(string TTG, string SDATE, string EDATE, string KODECAB, string DNVISION1, string ISDNVISION1, string NOTANO, string ISNOTANO, string KODECO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((TTG == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TTG));
            }
            if ((SDATE == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SDATE));
            }
            if ((EDATE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(EDATE));
            }
            if ((KODECAB == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KODECAB));
            }
            if ((DNVISION1 == null)) {
                throw new global::System.ArgumentNullException("DNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(DNVISION1));
            }
            if ((ISDNVISION1 == null)) {
                throw new global::System.ArgumentNullException("ISDNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(ISDNVISION1));
            }
            if ((NOTANO == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(NOTANO));
            }
            if ((ISNOTANO == null)) {
                throw new global::System.ArgumentNullException("ISNOTANO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ISNOTANO));
            }
            if ((KODECO == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(KODECO));
            }
            DSAging.CUSTOMERDataTable dataTable = new DSAging.CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.CUSTOMERDataTable GetDataByFilterAgingPPW(string TTG, global::System.Nullable<global::System.DateTime> SDATE, global::System.Nullable<global::System.DateTime> EDATE, string KODECAB, string DNVISION1, string ISDNVISION1, string NOTANO, string ISNOTANO, string KODECO) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((TTG == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TTG));
            }
            if ((SDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((KODECAB == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KODECAB));
            }
            if ((DNVISION1 == null)) {
                throw new global::System.ArgumentNullException("DNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(DNVISION1));
            }
            if ((ISDNVISION1 == null)) {
                throw new global::System.ArgumentNullException("ISDNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(ISDNVISION1));
            }
            if ((NOTANO == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(NOTANO));
            }
            if ((ISNOTANO == null)) {
                throw new global::System.ArgumentNullException("ISNOTANO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ISNOTANO));
            }
            if ((KODECO == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(KODECO));
            }
            DSAging.CUSTOMERDataTable dataTable = new DSAging.CUSTOMERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSURANCETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public INSURANCETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSURANCE";
            tableMapping.ColumnMappings.Add("VOUCHER", "VOUCHER");
            tableMapping.ColumnMappings.Add("DUEDATE", "DUEDATE");
            tableMapping.ColumnMappings.Add("PROFILEID", "PROFILEID");
            tableMapping.ColumnMappings.Add("NAMA", "NAMA");
            tableMapping.ColumnMappings.Add("TTG", "TTG");
            tableMapping.ColumnMappings.Add("POLICYNO", "POLICYNO");
            tableMapping.ColumnMappings.Add("DUEAMOUNT", "DUEAMOUNT");
            tableMapping.ColumnMappings.Add("DAYS", "DAYS");
            tableMapping.ColumnMappings.Add("DAYS30", "DAYS30");
            tableMapping.ColumnMappings.Add("DAYS60", "DAYS60");
            tableMapping.ColumnMappings.Add("DAYS90", "DAYS90");
            tableMapping.ColumnMappings.Add("DAYS91", "DAYS91");
            tableMapping.ColumnMappings.Add("MTU", "MTU");
            tableMapping.ColumnMappings.Add("PICMKT", "PICMKT");
            tableMapping.ColumnMappings.Add("PLCID", "PLCID");
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER");
            tableMapping.ColumnMappings.Add("KODECO", "KODECO");
            tableMapping.ColumnMappings.Add("DN_PLCSYS1", "DN_PLCSYS1");
            tableMapping.ColumnMappings.Add("DN_PLCSYS2", "DN_PLCSYS2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIB.DL.FA.Properties.Settings.Default.FAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"
SELECT P.VOUCHER, PLC.PLCID, P.DUEDATE, NT.PROFILEID, NT.NAMA, LEFT(PLC.PLCTTG,50) AS TTG, ADD1.VAL AS POLICYNO,
  P.MTU, P.DUEAMOUNT, DATEDIFF(DAY, P.DUEDATE, GETDATE()) AS DAYS, ADD2.VAL AS PICMKT, CO.KODECO,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT ELSE 0 END AS DAYS30,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 31 AND 60 THEN P.DUEAMOUNT ELSE 0 END AS DAYS60,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT ELSE 0 END AS DAYS90,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) > 90 THEN P.DUEAMOUNT ELSE 0 END AS DAYS91,
PRY.NAMA AS CUSTOMER,  ADD1_DNV.VAL AS DN_PLCSYS1, ADD2_DNV.VAL AS DN_PLCSYS2
FROM FAPAYMENT P
INNER JOIN FAVOUCHER VO ON P.VOUCHER = VO.VOUCHER
INNER JOIN PLCNOTA NT ON VO.NOTANO = NT.NOTANO
INNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID
INNER JOIN PLCPAYOR PY ON PY.PLCID = PLC.PLCID
INNER JOIN PROFILE PRY ON PRY.PROFILEID = PY.PROFILEID
LEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = 'POLICY_NO'
LEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = 'PS_PIC_MKT'
LEFT OUTER JOIN PLCADDINFO ADD1_DNV ON NT.PLCID = ADD1_DNV.PLCID AND ADD1_DNV.CONFIGID = 'DN_VISION'
LEFT OUTER JOIN PLCADDINFO ADD2_DNV ON NT.PLCID = ADD2_DNV.PLCID AND ADD2_DNV.CONFIGID = 'DN_VISION2'
LEFT OUTER JOIN CO ON CO.USRID = ADD2.VAL
WHERE NT.DCTYPE = 'DI'
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "\r\nSELECT P.VOUCHER, PLC.PLCID, P.DUEDATE, NT.PROFILEID, NT.NAMA, \r\nCASE WHEN CHAR" +
                "INDEX(\'and/or\', PLC.PLCTTG) > 0 THEN SUBSTRING(PLC.PLCTTG, 0, CHARINDEX(\'and/or\'" +
                ", PLC.PLCTTG)) ELSE PLC.PLCTTG END AS TTG, \r\nADD1.VAL AS POLICYNO, ADD2.VAL AS P" +
                "ICMKT, CO.KODECO,\r\n  P.MTU, P.DUEAMOUNT-P.PAYMENT_OC AS DUEAMOUNT, DATEDIFF(DAY," +
                " P.DUEDATE, @ADATE) AS DAYS,\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWE" +
                "EN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS30,\r\n  CASE WHEN DAT" +
                "EDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT_OC EL" +
                "SE 0 END AS DAYS60,\r\n  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 61 AND" +
                " 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS90,\r\n  CASE WHEN DATEDIFF(DA" +
                "Y, P.DUEDATE, @ADATE) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS91,\r\n" +
                "PRY.NAMA AS CUSTOMER, ISNULL(ADD1_DNV.VAL,ADD2_DNV.VAL) AS DN_PLCSYS1, \r\nADD3.VA" +
                "L AS CERTIFICATE_NO,PLC.POLICYTYPE AS JENIS_ASURANSI,NT.ADATE AS INVOICE_DATE\r\nF" +
                "ROM FAPAYMENT P\r\nINNER JOIN FAVOUCHER VO ON P.VOUCHER = VO.VOUCHER\r\nINNER JOIN P" +
                "LCNOTA NT ON VO.NOTANO = NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = NT.PLC" +
                "ID\r\nINNER JOIN PLCPAYOR PY ON PY.PLCID = PLC.PLCID\r\nINNER JOIN PROFILE PRY ON PR" +
                "Y.PROFILEID = PY.PROFILEID\r\nLEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.P" +
                "LCID AND ADD1.CONFIGID = \'POLICY_NO\'\r\nLEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCI" +
                "D = ADD2.PLCID AND ADD2.CONFIGID = \'PS_PIC_MKT\'\r\nLEFT OUTER JOIN PLCADDINFO ADD3" +
                " ON NT.PLCID = ADD3.PLCID AND ADD3.CONFIGID = \'CERTIFICATE_NO\'\r\nLEFT OUTER JOIN " +
                "CO ON CO.USRID = ADD2.VAL\r\nLEFT OUTER JOIN PLACINGTOC PT ON PT.PLCID = NT.PLCID " +
                "AND NT.KODETOC = PT.KODETOC\r\nLEFT OUTER JOIN PLCADDINFO ADD1_DNV ON NT.PLCID = A" +
                "DD1_DNV.PLCID AND ADD1_DNV.CONFIGID = \'DN_VISION\' AND PT.URUT = 1\r\nLEFT OUTER JO" +
                "IN PLCADDINFO ADD2_DNV ON NT.PLCID = ADD2_DNV.PLCID AND ADD2_DNV.CONFIGID = \'DN_" +
                "VISION2\' AND PT.URUT = 2\r\nWHERE (NT.DCTYPE IN (\'DI\', \'CF\') OR (NT.DCTYPE = \'OP\' " +
                "AND NT.DC = \'C\'))\r\nAND (P.DUEDATE BETWEEN @SDATE AND @EDATE) AND (PLC.PLCTTG LIK" +
                "E @PLCTTG) AND (NT.NAMA LIKE @INSURANCE) AND (PLC.KODECAB LIKE @KODECAB) AND (IS" +
                "PAID = 0)\r\nAND (ISNULL(ADD1_DNV.VAL,ADD2_DNV.VAL) LIKE @DNVISION1 OR \'1\' = @ISDN" +
                "VISION1)\r\nAND (NT.NOTANO LIKE @NOTANO OR \'1\' = @ISNOTANO)\r\nAND (NT.ADATE >= \'202" +
                "0-12-31\')\r\nORDER BY P.VOUCHER\r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLCTTG", global::System.Data.SqlDbType.VarChar, 600, global::System.Data.ParameterDirection.Input, 0, 0, "PLCTTG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSURANCE", global::System.Data.SqlDbType.VarChar, 600, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECAB", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KODECAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISDNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTANO", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOTANO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISNOTANO", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT P.VOUCHER, PLC.PLCID, P.DUEDATE, NT.PROFILEID, NT.NAMA, \r\nCASE WHEN CHARIN" +
                "DEX(\'and/or\', PLC.PLCTTG) > 0 THEN SUBSTRING(PLC.PLCTTG, 0, CHARINDEX(\'and/or\', " +
                "PLC.PLCTTG)) ELSE PLC.PLCTTG END AS TTG, \r\nADD1.VAL AS POLICYNO, ADD2.VAL AS PIC" +
                "MKT, CO.KODECO,\r\n  P.MTU, P.DUEAMOUNT-P.PAYMENT_OC AS DUEAMOUNT, DATEDIFF(DAY, N" +
                "T.ADATE, @ADATE) AS DAYS,\r\n  CASE WHEN DATEDIFF(DAY, NT.ADATE, @ADATE) BETWEEN 0" +
                " AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS30,\r\n  CASE WHEN DATEDIF" +
                "F(DAY, NT.ADATE, @ADATE) BETWEEN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 " +
                "END AS DAYS60,\r\n  CASE WHEN DATEDIFF(DAY, NT.ADATE, @ADATE) BETWEEN 61 AND 90 TH" +
                "EN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS90,\r\n  CASE WHEN DATEDIFF(DAY, NT." +
                "ADATE, @ADATE) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS91,\r\nPRY.NAM" +
                "A AS CUSTOMER, ISNULL(ADD1_DNV.VAL,ADD2_DNV.VAL) AS DN_PLCSYS1, \r\nADD3.VAL AS CE" +
                "RTIFICATE_NO,PLC.POLICYTYPE AS JENIS_ASURANSI,NT.ADATE AS INVOICE_DATE\r\nFROM FAP" +
                "AYMENT P\r\nINNER JOIN FAVOUCHER VO ON P.VOUCHER = VO.VOUCHER\r\nINNER JOIN PLCNOTA " +
                "NT ON VO.NOTANO = NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID\r\nINN" +
                "ER JOIN PLCPAYOR PY ON PY.PLCID = PLC.PLCID\r\nINNER JOIN PROFILE PRY ON PRY.PROFI" +
                "LEID = PY.PROFILEID\r\nLEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AN" +
                "D ADD1.CONFIGID = \'POLICY_NO\'\r\nLEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD" +
                "2.PLCID AND ADD2.CONFIGID = \'PS_PIC_MKT\'\r\nLEFT OUTER JOIN PLCADDINFO ADD3 ON NT." +
                "PLCID = ADD3.PLCID AND ADD3.CONFIGID = \'CERTIFICATE_NO\'\r\nLEFT OUTER JOIN CO ON C" +
                "O.USRID = ADD2.VAL\r\nLEFT OUTER JOIN PLACINGTOC PT ON PT.PLCID = NT.PLCID AND NT." +
                "KODETOC = PT.KODETOC\r\nLEFT OUTER JOIN PLCADDINFO ADD1_DNV ON NT.PLCID = ADD1_DNV" +
                ".PLCID AND ADD1_DNV.CONFIGID = \'DN_VISION\' AND PT.URUT = 1\r\nLEFT OUTER JOIN PLCA" +
                "DDINFO ADD2_DNV ON NT.PLCID = ADD2_DNV.PLCID AND ADD2_DNV.CONFIGID = \'DN_VISION2" +
                "\' AND PT.URUT = 2\r\nWHERE (NT.DCTYPE IN (\'DI\', \'CF\') OR (NT.DCTYPE = \'OP\' AND NT." +
                "DC = \'C\'))\r\nAND (NT.ADATE BETWEEN @SDATE AND @EDATE) AND (PLC.PLCTTG LIKE @PLCTT" +
                "G) \r\nAND (NT.NAMA LIKE @INSURANCE) AND (PLC.KODECAB LIKE @KODECAB) AND (ISPAID =" +
                " 0)\r\nAND (ISNULL(ADD1_DNV.VAL,ADD2_DNV.VAL) LIKE @DNVISION1 OR \'1\' = @ISDNVISION" +
                "1)\r\nAND (NT.NOTANO LIKE @NOTANO OR \'1\' = @ISNOTANO)\r\nORDER BY P.VOUCHER";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "INVOICE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLCTTG", global::System.Data.SqlDbType.VarChar, 600, global::System.Data.ParameterDirection.Input, 0, 0, "PLCTTG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSURANCE", global::System.Data.SqlDbType.VarChar, 600, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECAB", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KODECAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISDNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTANO", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOTANO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISNOTANO", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"
SELECT P.VOUCHER, P.DUEDATE, NT.PROFILEID, NT.NAMA, LEFT(PLC.PLCTTG,50) AS TTG, ADD1.VAL AS POLICYNO,
  P.MTU, P.DUEAMOUNT-P.PAYMENT_OC AS DUEAMOUNT, DATEDIFF(DAY, P.DUEDATE, @ADATE) AS DAYS, ADD2.VAL AS PICMKT, CO.KODECO,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS30,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS60,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) BETWEEN 61 AND 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS90,
  CASE WHEN DATEDIFF(DAY, P.DUEDATE, @ADATE) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END AS DAYS91
FROM FAPAYMENT P
INNER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER
INNER JOIN PLCNOTA NT ON VO.NOTANO = NT.NOTANO
INNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID
LEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = 'POLICY_NO'
LEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = 'PS_PIC_MKT'
LEFT OUTER JOIN CO ON CO.USRID = ADD2.VAL
WHERE NT.DCTYPE = 'DI' 
AND P.DUEDATE = @ADATE AND NT.NAMA LIKE @INSURANCENAME
ORDER BY P.VOUCHER";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSURANCENAME", global::System.Data.SqlDbType.VarChar, 600, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSAging.INSURANCEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSAging.INSURANCEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSAging.INSURANCEDataTable dataTable = new DSAging.INSURANCEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.INSURANCEDataTable GetDataByADate(string ADATE, global::System.Nullable<global::System.DateTime> SDATE, global::System.Nullable<global::System.DateTime> EDATE, string PLCTTG, string INSURANCE, string KODECAB, string DNVISION1, string ISDNVISION1, string NOTANO, string ISNOTANO) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ADATE == null)) {
                throw new global::System.ArgumentNullException("ADATE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ADATE));
            }
            if ((SDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((PLCTTG == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PLCTTG));
            }
            if ((INSURANCE == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(INSURANCE));
            }
            if ((KODECAB == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(KODECAB));
            }
            if ((DNVISION1 == null)) {
                throw new global::System.ArgumentNullException("DNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(DNVISION1));
            }
            if ((ISDNVISION1 == null)) {
                throw new global::System.ArgumentNullException("ISDNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ISDNVISION1));
            }
            if ((NOTANO == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(NOTANO));
            }
            if ((ISNOTANO == null)) {
                throw new global::System.ArgumentNullException("ISNOTANO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(ISNOTANO));
            }
            DSAging.INSURANCEDataTable dataTable = new DSAging.INSURANCEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.INSURANCEDataTable GetDataByDNDate(System.DateTime ADATE, string SDATE, string EDATE, string PLCTTG, string INSURANCE, string KODECAB, string DNVISION1, string ISDNVISION1, string NOTANO, string ISNOTANO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(ADATE));
            if ((SDATE == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SDATE));
            }
            if ((EDATE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(EDATE));
            }
            if ((PLCTTG == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PLCTTG));
            }
            if ((INSURANCE == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(INSURANCE));
            }
            if ((KODECAB == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(KODECAB));
            }
            if ((DNVISION1 == null)) {
                throw new global::System.ArgumentNullException("DNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(DNVISION1));
            }
            if ((ISDNVISION1 == null)) {
                throw new global::System.ArgumentNullException("ISDNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ISDNVISION1));
            }
            if ((NOTANO == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(NOTANO));
            }
            if ((ISNOTANO == null)) {
                throw new global::System.ArgumentNullException("ISNOTANO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(ISNOTANO));
            }
            DSAging.INSURANCEDataTable dataTable = new DSAging.INSURANCEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.INSURANCEDataTable GetDataByFilterAging(global::System.Nullable<global::System.DateTime> ADATE, string INSURANCENAME) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((ADATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(ADATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((INSURANCENAME == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(INSURANCENAME));
            }
            DSAging.INSURANCEDataTable dataTable = new DSAging.INSURANCEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CUSTOMER_UNDUETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public CUSTOMER_UNDUETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CUSTOMER_UNDUE";
            tableMapping.ColumnMappings.Add("VOUCHER", "VOUCHER");
            tableMapping.ColumnMappings.Add("DUEDATE", "DUEDATE");
            tableMapping.ColumnMappings.Add("SDATE", "SDATE");
            tableMapping.ColumnMappings.Add("PROFILEID", "PROFILEID");
            tableMapping.ColumnMappings.Add("NAMA", "NAMA");
            tableMapping.ColumnMappings.Add("LEADER", "LEADER");
            tableMapping.ColumnMappings.Add("POLICYNO", "POLICYNO");
            tableMapping.ColumnMappings.Add("MTU", "MTU");
            tableMapping.ColumnMappings.Add("DUEAMOUNT", "DUEAMOUNT");
            tableMapping.ColumnMappings.Add("PICMKT", "PICMKT");
            tableMapping.ColumnMappings.Add("DAYS30", "DAYS30");
            tableMapping.ColumnMappings.Add("DAYS60", "DAYS60");
            tableMapping.ColumnMappings.Add("DAYS90", "DAYS90");
            tableMapping.ColumnMappings.Add("DAYS91", "DAYS91");
            tableMapping.ColumnMappings.Add("KODECO", "KODECO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIB.DL.FA.Properties.Settings.Default.FAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT P.VOUCHER, P.DUEDATE, PLC.SDATE, NT.PROFILEID, NT.NAMA, INS.NAMA AS LEADER, ADD1.VAL AS POLICYNO,
  P.MTU, P.DUEAMOUNT, ADD2.VAL AS PICMKT, CO.KODECO AS KODECO,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT ELSE 0 END AS DAYS30,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) BETWEEN 31 AND 60 THEN P.DUEAMOUNT ELSE 0 END AS DAYS60,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT ELSE 0 END AS DAYS90,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) > 90 THEN P.DUEAMOUNT ELSE 0 END AS DAYS91
FROM FAPAYMENT P
INNER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER
INNER JOIN PLCNOTA NT ON VO.NOTANO = NT.NOTANO
INNER JOIN PLCINSURANCE INS ON NT.PLCID = INS.PLCID AND INS.TYPEF = 'L'
INNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID
LEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = 'POLICY_NO'
LEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = 'PS_PIC_MKT'
LEFT OUTER JOIN CO ON CO.USRID = ADD2.VAL
WHERE NT.DCTYPE = 'BB'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT P.VOUCHER, P.DUEDATE, PLC.SDATE, NT.PROFILEID, NT.NAMA, INS.NAMA AS LEADER, ADD1.VAL AS POLICYNO,
  P.MTU, P.DUEAMOUNT, DATEDIFF(DAY, P.DUEDATE, GETDATE()) AS DAYS, ADD2.VAL AS PICMKT, CO.KODECO AS KODECO,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT ELSE 0 END AS NT_DAYS30,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) BETWEEN 31 AND 60 THEN P.DUEAMOUNT ELSE 0 END AS NT_DAYS60,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT ELSE 0 END AS NT_DAYS90,
  CASE WHEN DATEDIFF(DAY, PLC.SDATE, GETDATE()) > 90 THEN P.DUEAMOUNT ELSE 0 END AS NT_DAYS91
FROM FAPAYMENT P
INNER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER
INNER JOIN PLCNOTA NT ON VO.NOTANO = NT.NOTANO
INNER JOIN PLCINSURANCE INS ON NT.PLCID = INS.PLCID AND INS.TYPEF = 'L'
INNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID
LEFT OUTER JOIN PLCADDINFO ADD1 ON NT.PLCID = ADD1.PLCID AND ADD1.CONFIGID = 'POLICY_NO'
LEFT OUTER JOIN PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = 'PS_PIC_MKT'
LEFT OUTER JOIN CO ON CO.USRID = ADD2.VAL
WHERE NT.DCTYPE = 'BB'
AND (NT.NAMA LIKE @TTG) AND (PLC.SDATE BETWEEN @SDATE AND @EDATE) AND (INS.NAMA LIKE @INSURANCENAME)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTG", global::System.Data.SqlDbType.VarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "SDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSURANCENAME", global::System.Data.SqlDbType.VarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "LEADER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSAging.CUSTOMER_UNDUEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSAging.CUSTOMER_UNDUEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSAging.CUSTOMER_UNDUEDataTable dataTable = new DSAging.CUSTOMER_UNDUEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.CUSTOMER_UNDUEDataTable GetDataByFilterUndue(string TTG, global::System.Nullable<global::System.DateTime> SDATE, global::System.Nullable<global::System.DateTime> EDATE, string INSURANCENAME) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((TTG == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TTG));
            }
            if ((SDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((INSURANCENAME == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(INSURANCENAME));
            }
            DSAging.CUSTOMER_UNDUEDataTable dataTable = new DSAging.CUSTOMER_UNDUEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CUSTOMERSUMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public CUSTOMERSUMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CUSTOMERSUM";
            tableMapping.ColumnMappings.Add("MTU", "MTU");
            tableMapping.ColumnMappings.Add("DUEAMOUNT", "DUEAMOUNT");
            tableMapping.ColumnMappings.Add("DAYS30", "DAYS30");
            tableMapping.ColumnMappings.Add("DAYS60", "DAYS60");
            tableMapping.ColumnMappings.Add("DAYS90", "DAYS90");
            tableMapping.ColumnMappings.Add("DAYS91", "DAYS91");
            tableMapping.ColumnMappings.Add("NOTDUE", "NOTDUE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::TIB.DL.FA.Properties.Settings.Default.FAConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT P.MTU, P.DUEAMOUNT, 0 AS NOTDUE, 0 AS DAYS30, 0 AS DAYS60, 0 AS DAYS90, 0 " +
                "AS DAYS91\r\nFROM FAPAYMENT P";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT P.MTU, \r\n  SUM(P.DUEAMOUNT) AS DUEAMOUNT, \r\n  SUM(CASE WHEN NT.ADATE > GET" +
                "DATE() THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END) AS NOTDUE,\r\n  SUM(CASE WHEN DA" +
                "TEDIFF(DAY, NT.ADATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_OC " +
                "ELSE 0 END) AS DAYS30,\r\n  SUM(CASE WHEN DATEDIFF(DAY, NT.ADATE, GETDATE()) BETWE" +
                "EN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END) AS DAYS60,\r\n  SUM(CASE WH" +
                "EN DATEDIFF(DAY, NT.ADATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT-P.PAYME" +
                "NT_OC ELSE 0 END) AS DAYS90,\r\n  SUM(CASE WHEN DATEDIFF(DAY, NT.ADATE, GETDATE())" +
                " > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC  ELSE 0 END) AS DAYS91\r\nFROM FAPAYMENT P\r\nIN" +
                "NER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER\r\nINNER JOIN PLCNOTA NT ON VO.NOT" +
                "ANO = NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID\r\nINNER JOIN PLAC" +
                "INGTOC PT ON PT.PLCID = PLC.PLCID AND NT.KODETOC = PT.KODETOC\r\nLEFT OUTER JOIN P" +
                "LCADDINFO ADD1_DNV ON NT.PLCID = ADD1_DNV.PLCID AND ADD1_DNV.CONFIGID = \'DN_VISI" +
                "ON\' AND PT.URUT = 1\r\nLEFT OUTER JOIN PLCADDINFO ADD2_DNV ON NT.PLCID = ADD2_DNV." +
                "PLCID AND ADD2_DNV.CONFIGID = \'DN_VISION2\'  AND PT.URUT = 2\r\nLEFT OUTER JOIN PLC" +
                "ADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = \'PS_PIC_MKT\'\r\nLEFT OUT" +
                "ER JOIN CO ON CO.USRID = ADD2.VAL\r\nWHERE (NT.DCTYPE IN (\'BB\', \'BF\') OR (NT.DCTYP" +
                "E = \'OP\' AND NT.DC = \'D\')) \r\nAND (P.ISPAID = 0) \r\nAND (NT.NAMA LIKE @TTG) AND (N" +
                "T.ADATE BETWEEN @SDATE AND @EDATE) AND (PLC.KODECAB LIKE @KODECAB) \r\nAND (ISNULL" +
                "(ADD1_DNV.VAL, ADD2_DNV.VAL) LIKE @DNVISION1 OR \'1\' = @ISDNVISION1)\r\nAND (NT.NOT" +
                "ANO LIKE @NOTANO OR \'1\' = @ISNOTANO)\r\nAND (CO.KODECO LIKE @KODECO)\r\nGROUP BY P.M" +
                "TU";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTG", global::System.Data.SqlDbType.VarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECAB", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KODECAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISDNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTANO", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOTANO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISNOTANO", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECO", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "KODECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT P.MTU, \r\n  SUM(P.DUEAMOUNT) AS DUEAMOUNT, \r\n  SUM(CASE WHEN P.DUEDATE > GE" +
                "TDATE() THEN P.DUEAMOUNT- P.PAYMENT_OC ELSE 0 END) AS NOTDUE,\r\n  SUM(CASE WHEN D" +
                "ATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 0 AND 30 THEN P.DUEAMOUNT-P.PAYMENT_O" +
                "C ELSE 0 END) AS DAYS30,\r\n  SUM(CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BE" +
                "TWEEN 31 AND 60 THEN P.DUEAMOUNT-P.PAYMENT_OC ELSE 0 END) AS DAYS60,\r\n  SUM(CASE" +
                " WHEN DATEDIFF(DAY, P.DUEDATE, GETDATE()) BETWEEN 61 AND 90 THEN P.DUEAMOUNT-P.P" +
                "AYMENT_OC ELSE 0 END) AS DAYS90,\r\n  SUM(CASE WHEN DATEDIFF(DAY, P.DUEDATE, GETDA" +
                "TE()) > 90 THEN P.DUEAMOUNT-P.PAYMENT_OC  ELSE 0 END) AS DAYS91\r\nFROM FAPAYMENT " +
                "P\r\nINNER JOIN FAVOUCHER VO ON VO.VOUCHER = P.VOUCHER\r\nINNER JOIN PLCNOTA NT ON V" +
                "O.NOTANO = NT.NOTANO\r\nINNER JOIN PLACING PLC ON PLC.PLCID = NT.PLCID\r\nINNER JOIN" +
                " PLACINGTOC PT ON PT.PLCID = PLC.PLCID AND NT.KODETOC = PT.KODETOC\r\nLEFT OUTER J" +
                "OIN PLCADDINFO ADD1_DNV ON NT.PLCID = ADD1_DNV.PLCID AND ADD1_DNV.CONFIGID = \'DN" +
                "_VISION\' AND PT.URUT = 1\r\nLEFT OUTER JOIN PLCADDINFO ADD2_DNV ON NT.PLCID = ADD2" +
                "_DNV.PLCID AND ADD2_DNV.CONFIGID = \'DN_VISION2\'  AND PT.URUT = 2\r\nLEFT OUTER JOI" +
                "N PLCADDINFO ADD2 ON NT.PLCID = ADD2.PLCID AND ADD2.CONFIGID = \'PS_PIC_MKT\'\r\nLEF" +
                "T OUTER JOIN CO ON CO.USRID = ADD2.VAL\r\nWHERE (NT.DCTYPE IN (\'BB\', \'BF\') OR (NT." +
                "DCTYPE = \'OP\' AND NT.DC = \'D\')) \r\nAND (P.ISPAID = 0) \r\nAND (NT.NAMA LIKE @TTG) A" +
                "ND (P.DUEDATE BETWEEN @SDATE AND @EDATE) AND (PLC.KODECAB LIKE @KODECAB) \r\nAND (" +
                "ISNULL(ADD1_DNV.VAL, ADD2_DNV.VAL) LIKE @DNVISION1 OR \'1\' = @ISDNVISION1)\r\nAND (" +
                "NT.NOTANO LIKE @NOTANO OR \'1\' = @ISNOTANO)\r\nAND (CO.KODECO LIKE @KODECO)\r\nGROUP " +
                "BY P.MTU";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTG", global::System.Data.SqlDbType.VarChar, 500, global::System.Data.ParameterDirection.Input, 0, 0, "NAMA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DUEDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECAB", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, "KODECAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISDNVISION1", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTANO", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "NOTANO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ISNOTANO", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KODECO", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "KODECO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSAging.CUSTOMERSUMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSAging.CUSTOMERSUMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSAging.CUSTOMERSUMDataTable dataTable = new DSAging.CUSTOMERSUMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.CUSTOMERSUMDataTable GetDataByFilterAgingNote(string TTG, string SDATE, string EDATE, string KODECAB, string DNVISION1, string ISDNVISION1, string NOTANO, string ISNOTANO, string KODECO) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((TTG == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TTG));
            }
            if ((SDATE == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SDATE));
            }
            if ((EDATE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(EDATE));
            }
            if ((KODECAB == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KODECAB));
            }
            if ((DNVISION1 == null)) {
                throw new global::System.ArgumentNullException("DNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(DNVISION1));
            }
            if ((ISDNVISION1 == null)) {
                throw new global::System.ArgumentNullException("ISDNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(ISDNVISION1));
            }
            if ((NOTANO == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(NOTANO));
            }
            if ((ISNOTANO == null)) {
                throw new global::System.ArgumentNullException("ISNOTANO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ISNOTANO));
            }
            if ((KODECO == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(KODECO));
            }
            DSAging.CUSTOMERSUMDataTable dataTable = new DSAging.CUSTOMERSUMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DSAging.CUSTOMERSUMDataTable GetDataByFilterAgingPPW(string TTG, global::System.Nullable<global::System.DateTime> SDATE, global::System.Nullable<global::System.DateTime> EDATE, string KODECAB, string DNVISION1, string ISDNVISION1, string NOTANO, string ISNOTANO, string KODECO) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((TTG == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(TTG));
            }
            if ((SDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EDATE.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EDATE.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((KODECAB == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(KODECAB));
            }
            if ((DNVISION1 == null)) {
                throw new global::System.ArgumentNullException("DNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(DNVISION1));
            }
            if ((ISDNVISION1 == null)) {
                throw new global::System.ArgumentNullException("ISDNVISION1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(ISDNVISION1));
            }
            if ((NOTANO == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(NOTANO));
            }
            if ((ISNOTANO == null)) {
                throw new global::System.ArgumentNullException("ISNOTANO");
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(ISNOTANO));
            }
            if ((KODECO == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(KODECO));
            }
            DSAging.CUSTOMERSUMDataTable dataTable = new DSAging.CUSTOMERSUMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(DSAging dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(DSAging dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(DSAging dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(DSAging dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591